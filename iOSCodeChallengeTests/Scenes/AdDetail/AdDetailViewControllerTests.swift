//
//  AdDetailViewControllerTests.swift
//  iOSCodeChallenge
//
//  Created by Borja Saez de Guinoa Vilaplana on 20/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import iOSCodeChallenge
import XCTest

class AdDetailViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: AdDetailViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupAdDetailViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupAdDetailViewController()
  {
    
    sut = AdDetailViewController()
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class AdDetailBusinessLogicSpy: AdDetailBusinessLogic
  {
    var fetchAdDetailCalled = false
    var toggleFavoriteStatusCalled = false
    
    func fetchAdDetail() {
        fetchAdDetailCalled = true
    }
    
    func toggleFavoriteStatus() {
        toggleFavoriteStatusCalled = true
    }
    
  }
  
  // MARK: Tests
  
  func testShouldDisplayAdDetailViewModel()
  {
    // Given
    let spy = AdDetailBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    let adDetailDTO : IDDetailDTO = JSONMockDecoder.decode(mock: "idAdDetail")
    let viewModel = AdDetailViewModel.init(idDetailDTO: adDetailDTO, isFavorite: true)
    sut.showAdDetail(viewModel: viewModel)
    
    // Then
    
    XCTAssertEqual(viewModel.description, sut.descriptionTextView.text, "showAdDetail() shoud load the viewModel description in the textview")
    XCTAssertEqual(viewModel.price, sut.priceLabel.text, "showAdDetail() should set the price description in the price label")
    XCTAssertEqual(sut.favoriteButton.image(for: .normal), UIImage.init(named: "filled_favorite") , "showAdDetail() should set the favoriteButton image to be filled")
  }
    
}
