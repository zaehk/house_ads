//
//  AdDetailInteractor.swift
//  iOSCodeChallenge
//
//  Created by Borja Saez de Guinoa Vilaplana on 13/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AdDetailBusinessLogic
{
    func fetchAdDetail()
    func toggleFavoriteStatus()
}

protocol AdDetailDataStore
{
    //model from the previous list
    var idResultDTO: IDResultDTO? { get set }
    //detail model
    var idDetailDTO: IDDetailDTO? { get set }
}

class AdDetailInteractor: AdDetailBusinessLogic, AdDetailDataStore
{
    
    var idResultDTO: IDResultDTO?
    var idDetailDTO: IDDetailDTO?
    
    var presenter: AdDetailPresentationLogic?
    var adService: AdServiceProtocol?
    var adLocalService: AdLocalServiceProtocol?
    
    init(adService: AdServiceProtocol = AdService(), adLocalService: AdLocalServiceProtocol = AdLocalService()){
        self.adService = adService
        self.adLocalService = adLocalService
    }

    func fetchAdDetail() {
        if let detailURL = idResultDTO?.detailUrl {
            adService?.fetchAdDetail(adURL: detailURL, success: { [weak self] (detailDTO) in
                self?.idDetailDTO = detailDTO
                self?.checkAdFavoriteStatus(idDetailDTO: detailDTO)
            }, failure: { [weak self] (error) in
                self?.presenter?.presentError()
            })
        }
    }
    
    func checkAdFavoriteStatus(idDetailDTO: IDDetailDTO) {
        adLocalService?.checkIfIsFavorite(adId: idDetailDTO.adid ?? "", success: {
            self.presenter?.presentAdDetail(idDetailDTO: idDetailDTO, isFavorite: true)
        }, failure: { (persistenceError) in
            self.presenter?.presentAdDetail(idDetailDTO: idDetailDTO, isFavorite: false)
        })
    }
    
    func toggleFavoriteStatus() {
        
        if let safeResult = idResultDTO, let safeDetailDTO = idDetailDTO {
            adLocalService?.toggleFavoriteStatus(idResultDTO: safeResult, success: { [weak self] (newStatus) in
                self?.presenter?.presentAdDetail(idDetailDTO: safeDetailDTO, isFavorite: newStatus)
            }, failure: { [weak self](persistenceError) in
                self?.presenter?.presentFavoriteError()
            })
        }
    }
}
