//
//  FavoriteAdsListInteractor.swift
//  iOSCodeChallenge
//
//  Created by Borja Saez de Guinoa Vilaplana on 13/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteAdsListBusinessLogic
{
    func fetchFavoriteAds()
    func removeFromFavorite(index: Int)
}

protocol FavoriteAdsListDataStore
{
    var favoriteAds: [IDResultDTO] { get set }
}

class FavoriteAdsListInteractor: FavoriteAdsListBusinessLogic, FavoriteAdsListDataStore
{
    var presenter: FavoriteAdsListPresentationLogic?
    var adLocalService: AdLocalServiceProtocol?
    
    var favoriteAds: [IDResultDTO] = []
    
    init(adLocalService: AdLocalServiceProtocol = AdLocalService()){
        self.adLocalService = adLocalService
    }
    
    func fetchFavoriteAds() {
        adLocalService?.fetchFavoriteAdList(success: { [weak self] (idResultDTOList) in
            DispatchQueue.main.async {
                self?.favoriteAds = idResultDTOList
                self?.presenter?.presentFavoriteAds(ads: idResultDTOList)
            }
        }, failure: { [weak self] (persistenceError) in
            DispatchQueue.main.async {
                self?.presenter?.presentEmptyState()
            }
        })
    }
    
    func removeFromFavorite(index: Int) {
        adLocalService?.toggleFavoriteStatus(idResultDTO: favoriteAds[index], success: { [weak self] (favoriteStatus) in
            if !favoriteStatus {
                self?.removeFavoriteAdResult(index: index)
            } else {
                self?.presenter?.presentRemovingFromFavoritesError()
            }
        }, failure: { [weak self] (persistenceError) in
            self?.presenter?.presentRemovingFromFavoritesError()
        })
    }
    
    private func removeFavoriteAdResult(index:Int){
        self.favoriteAds.remove(at: index)
        presenter?.presentFavoriteAds(ads: self.favoriteAds)
    }
    
}
